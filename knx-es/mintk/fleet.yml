apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: mintk-fleet-server
  namespace: mintk
spec:
  version: 8.7.0

  kibanaRef:
    name: mintk
  elasticsearchRefs:
    - name: mintk
  mode: fleet
  fleetServerEnabled: true
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: mintk-elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        # containers:
        # - name: agent
        #   command:
        #   - bash
        #   - -c
        #   - |
        #     #!/usr/bin/env bash
        #     set -e
        #     if [[ -f /mnt/elastic-internal/elasticsearch-association/default/develop/certs/ca.crt ]]; then
        #       cp /mnt/elastic-internal/elasticsearch-association/default/develop/certs/ca.crt /usr/local/share/ca-certificates
        #       update-ca-certificates
        #     fi
        #     /usr/bin/tini -- /usr/local/bin/docker-entrypoint -e
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - pods
      - nodes
      - namespaces
    verbs:
      - get
      - watch
      - list
  - apiGroups: ["coordination.k8s.io"]
    resources:
      - leases
    verbs:
      - get
      - create
      - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mintk-elastic-agent
  namespace: mintk
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mintk-elastic-agent
subjects:
  - kind: ServiceAccount
    name: mintk-elastic-agent
    namespace: mintk
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io
